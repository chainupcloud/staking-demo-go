// description:
// @author renshiwei
// Date: 2024/2/21

package eth

import (
	"context"
	"github.com/chainupcloud/staking-demo-go/contracts/depositor"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/stretchr/testify/require"
	"strings"
	"testing"
)

const (
	testEVMAddr = ""
)

func TestVerifyTxParams(t *testing.T) {
	txParams := TxParams{
		From:             "0x892e7c8C5E716e17891ABf9395a0de1f2fc84786",
		To:               "0xFA5f9EAa65FFb2A75de092eB7f3fc84FC86B5b18",
		AmountWei:        "32000000000000000000",
		ContractCallData: "0x4f498c730000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000308efdf19b7f82afb875a466d44a764edf55d4b3b1eeaa8fafc9ce817a5b1484d4fedb681771a922154b04692e0fa4e82600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000892e7c8c5e716e17891abf9395a0de1f2fc84786000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060af8d3005fd1875e6cc66db4689f4599de851393a75e6e1110e6b2b0cf7fa5214ae8f460c61b2b2246a8b7e2fcbdb135e14d0e86a98c2ae64a2c7cfdf60176cac7788b3cac66f679103e09470c79613aad03b5347a024506fbd1acacc253edde70000000000000000000000000000000000000000000000000000000000000001240635f9279c6ddff81308e6695a4fe71898ab27c9b6751d031a672d2e6c662e",
	}

	batchDepositABI, err := abi.JSON(strings.NewReader(depositor.DepositorMetaData.ABI))
	require.NoError(t, err)

	data, err := hexutil.Decode(txParams.ContractCallData)
	require.NoError(t, err)

	data = data[len(batchDepositABI.Methods[BatchDepositMethod].ID):]

	result, err := batchDepositABI.Methods[BatchDepositMethod].Inputs.Unpack(data)
	require.NoError(t, err)

	t.Log(result)
}

func TestSignTx(t *testing.T) {
	// <YOUR_PARAMS>
	txParams := TxParams{
		From:             "0x892e7c8C5E716e17891ABf9395a0de1f2fc84786",
		To:               "0xFA5f9EAa65FFb2A75de092eB7f3fc84FC86B5b18",
		AmountWei:        "32000000000000000000",
		ContractCallData: "0x4f498c730000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000308efdf19b7f82afb875a466d44a764edf55d4b3b1eeaa8fafc9ce817a5b1484d4fedb681771a922154b04692e0fa4e82600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000892e7c8c5e716e17891abf9395a0de1f2fc84786000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060af8d3005fd1875e6cc66db4689f4599de851393a75e6e1110e6b2b0cf7fa5214ae8f460c61b2b2246a8b7e2fcbdb135e14d0e86a98c2ae64a2c7cfdf60176cac7788b3cac66f679103e09470c79613aad03b5347a024506fbd1acacc253edde70000000000000000000000000000000000000000000000000000000000000001240635f9279c6ddff81308e6695a4fe71898ab27c9b6751d031a672d2e6c662e",
	}
	privateKeyHex := ""

	signedTx, err := SignTx(context.Background(), testEVMAddr, txParams, privateKeyHex)
	require.NoError(t, err)

	t.Log("signedTx", signedTx)
}

func TestBroadcastSignedTx(t *testing.T) {
	signTxStr := "0xf903150a844221dbf283015d2994fa5f9eaa65ffb2a75de092eb7f3fc84fc86b5b188901bc16d674ec800000b902a44f498c730000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000308efdf19b7f82afb875a466d44a764edf55d4b3b1eeaa8fafc9ce817a5b1484d4fedb681771a922154b04692e0fa4e82600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020010000000000000000000000892e7c8c5e716e17891abf9395a0de1f2fc84786000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060af8d3005fd1875e6cc66db4689f4599de851393a75e6e1110e6b2b0cf7fa5214ae8f460c61b2b2246a8b7e2fcbdb135e14d0e86a98c2ae64a2c7cfdf60176cac7788b3cac66f679103e09470c79613aad03b5347a024506fbd1acacc253edde70000000000000000000000000000000000000000000000000000000000000001240635f9279c6ddff81308e6695a4fe71898ab27c9b6751d031a672d2e6c662e8284f3a09f936a3d7df4988c961c17a1dd3c654956d02cfbec4f4c741b2325234717ac63a070ae392edd5df8a056222bc6813214b1a3b4bcb18eb911e52a667b66cbb1c089"
	hash, err := BroadcastSignedTx(context.Background(), testEVMAddr, signTxStr, true)
	require.NoError(t, err)

	t.Log("txHash", hash.String())
}
